/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as IndexImport } from "./routes/index";
import { Route as FavoritesIndexImport } from "./routes/favorites/index";
import { Route as ExploreIndexImport } from "./routes/explore/index";
import { Route as EntityIdImport } from "./routes/entity/$id";

// Create Virtual Routes

const AboutIndexLazyImport = createFileRoute("/about/")();

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AboutIndexLazyRoute = AboutIndexLazyImport.update({
  id: "/about/",
  path: "/about/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/about/index.lazy").then((d) => d.Route));

const FavoritesIndexRoute = FavoritesIndexImport.update({
  id: "/favorites/",
  path: "/favorites/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/favorites/index.lazy").then((d) => d.Route),
);

const ExploreIndexRoute = ExploreIndexImport.update({
  id: "/explore/",
  path: "/explore/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/explore/index.lazy").then((d) => d.Route),
);

const EntityIdRoute = EntityIdImport.update({
  id: "/entity/$id",
  path: "/entity/$id",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/entity/$id": {
      id: "/entity/$id";
      path: "/entity/$id";
      fullPath: "/entity/$id";
      preLoaderRoute: typeof EntityIdImport;
      parentRoute: typeof rootRoute;
    };
    "/explore/": {
      id: "/explore/";
      path: "/explore";
      fullPath: "/explore";
      preLoaderRoute: typeof ExploreIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/favorites/": {
      id: "/favorites/";
      path: "/favorites";
      fullPath: "/favorites";
      preLoaderRoute: typeof FavoritesIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/about/": {
      id: "/about/";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/entity/$id": typeof EntityIdRoute;
  "/explore": typeof ExploreIndexRoute;
  "/favorites": typeof FavoritesIndexRoute;
  "/about": typeof AboutIndexLazyRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/entity/$id": typeof EntityIdRoute;
  "/explore": typeof ExploreIndexRoute;
  "/favorites": typeof FavoritesIndexRoute;
  "/about": typeof AboutIndexLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/entity/$id": typeof EntityIdRoute;
  "/explore/": typeof ExploreIndexRoute;
  "/favorites/": typeof FavoritesIndexRoute;
  "/about/": typeof AboutIndexLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/entity/$id" | "/explore" | "/favorites" | "/about";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/entity/$id" | "/explore" | "/favorites" | "/about";
  id:
    | "__root__"
    | "/"
    | "/entity/$id"
    | "/explore/"
    | "/favorites/"
    | "/about/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  EntityIdRoute: typeof EntityIdRoute;
  ExploreIndexRoute: typeof ExploreIndexRoute;
  FavoritesIndexRoute: typeof FavoritesIndexRoute;
  AboutIndexLazyRoute: typeof AboutIndexLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EntityIdRoute: EntityIdRoute,
  ExploreIndexRoute: ExploreIndexRoute,
  FavoritesIndexRoute: FavoritesIndexRoute,
  AboutIndexLazyRoute: AboutIndexLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/entity/$id",
        "/explore/",
        "/favorites/",
        "/about/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/entity/$id": {
      "filePath": "entity/$id.tsx"
    },
    "/explore/": {
      "filePath": "explore/index.tsx"
    },
    "/favorites/": {
      "filePath": "favorites/index.tsx"
    },
    "/about/": {
      "filePath": "about/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
